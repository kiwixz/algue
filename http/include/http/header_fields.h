#pragma once

#include <string_view>

namespace algue::http::header_fields {

constexpr std::string_view accept = "accept";
constexpr std::string_view accept_charset = "accept-charset";
constexpr std::string_view accept_encoding = "accept-encoding";
constexpr std::string_view accept_language = "accept-language";
constexpr std::string_view accept_post = "accept-post";
constexpr std::string_view accept_ranges = "accept-ranges";
constexpr std::string_view age = "age";
constexpr std::string_view allow = "allow";
constexpr std::string_view alpn = "alpn";
constexpr std::string_view alt_svc = "alt-svc";
constexpr std::string_view alt_used = "alt-used";
constexpr std::string_view authentication_info = "authentication-info";
constexpr std::string_view authorization = "authorization";
constexpr std::string_view cache_control = "cache-control";
constexpr std::string_view cal_managed_id = "cal-managed-id";
constexpr std::string_view caldav_timezones = "caldav-timezones";
constexpr std::string_view cdn_loop = "cdn-loop";
constexpr std::string_view cert_not_after = "cert-not-after";
constexpr std::string_view cert_not_before = "cert-not-before";
constexpr std::string_view connection = "connection";
constexpr std::string_view content_disposition = "content-disposition";
constexpr std::string_view content_encoding = "content-encoding";
constexpr std::string_view content_language = "content-language";
constexpr std::string_view content_length = "content-length";
constexpr std::string_view content_location = "content-location";
constexpr std::string_view content_range = "content-range";
constexpr std::string_view content_type = "content-type";
constexpr std::string_view cookie = "cookie";
constexpr std::string_view dasl = "dasl";
constexpr std::string_view dav = "dav";
constexpr std::string_view date = "date";
constexpr std::string_view depth = "depth";
constexpr std::string_view destination = "destination";
constexpr std::string_view early_data = "early-data";
constexpr std::string_view etag = "etag";
constexpr std::string_view expect = "expect";
constexpr std::string_view expires = "expires";
constexpr std::string_view forwarded = "forwarded";
constexpr std::string_view from = "from";
constexpr std::string_view host = "host";
constexpr std::string_view http2_settings = "http2-settings";
constexpr std::string_view if_ = "if";
constexpr std::string_view if_match = "if-match";
constexpr std::string_view if_modified_since = "if-modified-since";
constexpr std::string_view if_none_match = "if-none-match";
constexpr std::string_view if_range = "if-range";
constexpr std::string_view if_schedule_tag_match = "if-schedule-tag-match";
constexpr std::string_view if_unmodified_since = "if-unmodified-since";
constexpr std::string_view include_referred_token_binding_id = "include-referred-token-binding-id";
constexpr std::string_view last_modified = "last-modified";
constexpr std::string_view link = "link";
constexpr std::string_view location = "location";
constexpr std::string_view lock_token = "lock-token";
constexpr std::string_view max_forwards = "max-forwards";
constexpr std::string_view mime_version = "mime-version";
constexpr std::string_view odata_entityid = "odata-entityid";
constexpr std::string_view odata_isolation = "odata-isolation";
constexpr std::string_view odata_maxversion = "odata-maxversion";
constexpr std::string_view odata_version = "odata-version";
constexpr std::string_view ordering_type = "ordering-type";
constexpr std::string_view origin = "origin";
constexpr std::string_view oscore = "oscore";
constexpr std::string_view overwrite = "overwrite";
constexpr std::string_view position = "position";
constexpr std::string_view pragma = "pragma";
constexpr std::string_view prefer = "prefer";
constexpr std::string_view preference_applied = "preference-applied";
constexpr std::string_view proxy_authenticate = "proxy-authenticate";
constexpr std::string_view proxy_authentication_info = "proxy-authentication-info";
constexpr std::string_view proxy_authorization = "proxy-authorization";
constexpr std::string_view public_key_pins = "public-key-pins";
constexpr std::string_view public_key_pins_report_only = "public-key-pins-report-only";
constexpr std::string_view range = "range";
constexpr std::string_view referer = "referer";
constexpr std::string_view replay_nonce = "replay-nonce";
constexpr std::string_view retry_after = "retry-after";
constexpr std::string_view schedule_reply = "schedule-reply";
constexpr std::string_view schedule_tag = "schedule-tag";
constexpr std::string_view sec_token_binding = "sec-token-binding";
constexpr std::string_view sec_websocket_accept = "sec-websocket-accept";
constexpr std::string_view sec_websocket_extensions = "sec-websocket-extensions";
constexpr std::string_view sec_websocket_key = "sec-websocket-key";
constexpr std::string_view sec_websocket_protocol = "sec-websocket-protocol";
constexpr std::string_view sec_websocket_version = "sec-websocket-version";
constexpr std::string_view server = "server";
constexpr std::string_view set_cookie = "set-cookie";
constexpr std::string_view slug = "slug";
constexpr std::string_view strict_transport_security = "strict-transport-security";
constexpr std::string_view te = "te";
constexpr std::string_view timeout = "timeout";
constexpr std::string_view topic = "topic";
constexpr std::string_view trailer = "trailer";
constexpr std::string_view transfer_encoding = "transfer-encoding";
constexpr std::string_view ttl = "ttl";
constexpr std::string_view urgency = "urgency";
constexpr std::string_view upgrade = "upgrade";
constexpr std::string_view user_agent = "user-agent";
constexpr std::string_view vary = "vary";
constexpr std::string_view via = "via";
constexpr std::string_view www_authenticate = "www-authenticate";
constexpr std::string_view warning = "warning";
constexpr std::string_view x_content_type_options = "x-content-type-options";

}  // namespace algue::http::header_fields
